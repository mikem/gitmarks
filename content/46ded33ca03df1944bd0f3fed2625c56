<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <script src="/js/jquery-1.3.2.min.js" type="text/javascript"></script>
    
    <script src="/js/openfeedback.js" type="text/javascript"></script>
        

    <link rel="alternate" type="application/atom+xml" title="Comments on this page" href="/comments/feed/index.html" />
    <link rel="alternate" type="application/atom+xml" title="All comments on Programming Scala" href="/comments/feed?id=book" />

        <title>Programming Scala</title><link rel="stylesheet" href="/css/ofps_main.css" type="text/css" /><link rel="stylesheet" href="/css/ofps_ui.css" type="text/css" /><meta name="generator" content="DocBook XSL Stylesheets V1.74.3" /><meta name="description" content="Programming Scala introduces an exciting new language that offers all the benefits of a modern object model, functional programming, and an advanced type system. Packed with code examples, this comprehensive book teaches you how to be productive with Scala quickly, and explains what makes this language ideal for today's highly scalable, component-based applications that support concurrency and distribution. You'll also learn the advantages that Scala offers as a language for the Java Virtual Machine. Learn more at programmingscala.com or at the book's catalog page." /><link rel="home" href="index.html" title="Programming Scala" /><link rel="next" href="pr01.html" title="Preface" /></head><body><div class="oreilly-header"><ul><li><p><a href="http://oreilly.com/"><img alt="O'Reilly Logo" src="/oreilly-logo.jpg" /></a></p></li><li><p id="oreilly-breadcrumbs"><a href="http://labs.oreilly.com/">Labs</a> &gt; <a href="http://labs.oreilly.com/ofps.html">OFPS</a> &gt; <a href="index.html">Programming Scala</a></p></li><li><p class="login">

          <a href="/signin">Sign-in</a> or 
          <a href="/register">Register</a>

            </p></li><li><p class="ofps-show-hide-all-comments"><a href="#" class="ofps-show-hide-all-comments-toggle">Show all comments</a></p></li><li><p><a href="http://labs.oreilly.com/ofps.html">Help</a></p></li></ul></div><div class="navheader"><table width="100%" summary="Navigation header"><tr><th colspan="3" align="center">Programming Scala</th></tr><tr><td width="20%" align="left"> </td><th width="60%" align="center"> </th><td width="20%" align="right"> <a accesskey="n" href="pr01.html">Next</a></td></tr></table><hr /></div><div class="book" lang="en" id="id1731496" xml:lang="en"><div class="titlepage"><div><div><h1 class="title">Programming Scala</h1></div><div><div class="author"><h3 class="author"><span class="firstname">Dean</span> <span class="surname">Wampler</span></h3><div class="affiliation"><span class="orgname">Object Mentor, Inc.<br /></span></div><code class="email">&lt;<a class="email" href="mailto:dean@deanwampler.com">dean@deanwampler.com</a>&gt;</code></div></div><div><div class="author"><h3 class="author"><span class="firstname">Alex</span> <span class="surname">Payne</span></h3><div class="affiliation"><span class="orgname">Twitter, Inc.<br /></span></div><code class="email">&lt;<a class="email" href="mailto:alex@al3x.net">alex@al3x.net</a>&gt;</code></div></div><div><p class="copyright">Copyright © 2008 O’Reilly Media    </p></div><div><div id="id1731812" class="legalnotice"><p>This work has been released under the <a class="ulink" href="http://creativecommons.org/licenses/by-nc/3.0/" target="_top">Creative Commons Attribution-Noncommercial</a>.</p></div></div><div><div class="abstract"><p class="title"><b>Abstract</b></p><p><em class="citetitle">Programming Scala</em> introduces an exciting new language that offers all the benefits of a modern object model, functional programming, and an advanced type system. Packed with code examples, this comprehensive book teaches you how to be productive with Scala quickly, and explains what makes this language ideal for today's highly scalable, component-based applications that support concurrency and distribution. You'll also learn the advantages that Scala offers as a language for the Java Virtual Machine. </p><p>Learn more at <a class="ulink" href="http://programmingscala.com/" target="_top">programmingscala.com</a> or <a class="ulink" href="http://oreilly.com/catalog/9780596157746/" target="_top">at the book's catalog page</a>.</p></div></div></div><hr /></div><div class="toc"><dl><dt><span class="preface"><a href="pr01.html">Preface</a></span></dt><dd><dl><dt><span class="sect1"><a href="pr01.html#_welcome_to_programming_scala">Welcome to Programming Scala</a></span></dt><dt><span class="sect1"><a href="pr01.html#_conventions_used_in_this_book">Conventions Used in This Book</a></span></dt><dt><span class="sect1"><a href="pr01.html#UsingCodeExamples">Using Code Examples</a></span></dt><dd><dl><dt><span class="sect2"><a href="pr01.html#GettingCodeExamples">Getting the Code Examples</a></span></dt></dl></dd><dt><span class="sect1"><a href="pr01.html#para_other_file_convention">Safari® Books Online</a></span></dt><dt><span class="sect1"><a href="pr01.html#_how_to_contact_us">How to Contact Us</a></span></dt><dt><span class="sect1"><a href="pr01.html#_acknowledgements">Acknowledgements</a></span></dt></dl></dd><dt><span class="chapter"><a href="ch01.html">1. Zero to Sixty: Introducing Scala</a></span></dt><dd><dl><dt><span class="sect1"><a href="ch01.html#_why_scala">Why Scala?</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch01.html#_if_you_are_a_java_programmer_8230">If You Are a Java Programmer…</a></span></dt><dt><span class="sect2"><a href="ch01.html#_if_you_are_a_ruby_python_etc_programmer_8230">If You Are a Ruby, Python, etc. Programmer…</a></span></dt><dt><span class="sect2"><a href="ch01.html#_introducing_scala">Introducing Scala</a></span></dt><dt><span class="sect2"><a href="ch01.html#_the_seductions_of_scala">The Seductions of Scala</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch01.html#InstallingScala">Installing Scala</a></span></dt><dt><span class="sect1"><a href="ch01.html#ForMoreInformation">For More Information</a></span></dt><dt><span class="sect1"><a href="ch01.html#ATasteOfScala">A Taste of Scala</a></span></dt><dt><span class="sect1"><a href="ch01.html#ATasteOfConcurrency">A Taste of Concurrency</a></span></dt><dt><span class="sect1"><a href="ch01.html#_recap_and_what_8217_s_next">Recap and What’s Next</a></span></dt></dl></dd><dt><span class="chapter"><a href="ch02.html">2. Type Less, Do More</a></span></dt><dd><dl><dt><span class="sect1"><a href="ch02.html#_in_this_chapter">In This Chapter</a></span></dt><dt><span class="sect1"><a href="ch02.html#Semicolons">Semicolons</a></span></dt><dt><span class="sect1"><a href="ch02.html#VariableDeclarationsAndDefinitions">Variable Declarations</a></span></dt><dt><span class="sect1"><a href="ch02.html#MethodDeclarationsAndDefinitions">Method Declarations</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch02.html#MethodDefaultAndNamedArguments">Method Default and Named Arguments (Scala Version 2.8)</a></span></dt><dt><span class="sect2"><a href="ch02.html#NestingMethodDefinitions">Nesting Method Definitions</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch02.html#InferringTypes">Inferring Type Information</a></span></dt><dt><span class="sect1"><a href="ch02.html#Literals">Literals</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch02.html#IntegerLiterals">Integer Literals</a></span></dt><dt><span class="sect2"><a href="ch02.html#FloatingPointLiterals">Floating Point Literals</a></span></dt><dt><span class="sect2"><a href="ch02.html#BooleanLiterals">Boolean Literals</a></span></dt><dt><span class="sect2"><a href="ch02.html#CharacterLiterals">Character Literals</a></span></dt><dt><span class="sect2"><a href="ch02.html#StringLiterals">String Literals</a></span></dt><dt><span class="sect2"><a href="ch02.html#SymbolLiterals">Symbol Literals</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch02.html#TheTroubleWithTuples">Tuples</a></span></dt><dt><span class="sect1"><a href="ch02.html#OptionSomeNone">Option, Some, and None: Avoiding nulls</a></span></dt><dt><span class="sect1"><a href="ch02.html#Packages">Organizing Code in Files and Namespaces</a></span></dt><dt><span class="sect1"><a href="ch02.html#Importing">Importing Types and Their Members</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch02.html#ImportsAreRelative">Imports are Relative</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch02.html#AbstractTypesAndParameterizedTypes">Abstract Types And Parameterized Types</a></span></dt><dt><span class="sect1"><a href="ch02.html#ReservedWords">Reserved Words</a></span></dt><dt><span class="sect1"><a href="ch02.html#_recap_and_what_8217_s_next_2">Recap and What’s Next</a></span></dt></dl></dd><dt><span class="chapter"><a href="ch03.html">3. Rounding Out the Essentials</a></span></dt><dd><dl><dt><span class="sect1"><a href="ch03.html#_operator_operator">Operator? Operator?</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch03.html#para_pattern_matching_identifiers_">Syntactic Sugar</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch03.html#_methods_without_parentheses_and_dots">Methods Without Parentheses and Dots</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch03.html#_precedence_rules">Precedence Rules</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch03.html#_domain_specific_languages">Domain-Specific Languages</a></span></dt><dt><span class="sect1"><a href="ch03.html#IfStatements">Scala if Statements</a></span></dt><dt><span class="sect1"><a href="ch03.html#ForComprehensions">Scala for Comprehensions</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch03.html#_a_dog_simple_example">A Dog-Simple Example</a></span></dt><dt><span class="sect2"><a href="ch03.html#_filtering">Filtering</a></span></dt><dt><span class="sect2"><a href="ch03.html#Yielding">Yielding</a></span></dt><dt><span class="sect2"><a href="ch03.html#_expanded_scope">Expanded Scope</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch03.html#OtherLoopingConstructs">Other Looping Constructs</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch03.html#_scala_while_loops">Scala while Loops</a></span></dt><dt><span class="sect2"><a href="ch03.html#_scala_do_while_loops">Scala do-while Loops</a></span></dt><dt><span class="sect2"><a href="ch03.html#GeneratorExpressions">Generator Expressions</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch03.html#para_however_because_of_demand_for">Conditional Operators</a></span></dt><dt><span class="sect1"><a href="ch03.html#PatternMatching">Pattern Matching</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch03.html#ASimpleMatch">A Simple Match</a></span></dt><dt><span class="sect2"><a href="ch03.html#VariablesInMatches">Variables in Matches</a></span></dt><dt><span class="sect2"><a href="ch03.html#MatchingOnType">Matching on Type</a></span></dt><dt><span class="sect2"><a href="ch03.html#MatchingOnSequences">Matching on Sequences</a></span></dt><dt><span class="sect2"><a href="ch03.html#MatchingOnTuples">Matching on Tuples (and Guards)</a></span></dt><dt><span class="sect2"><a href="ch03.html#MatchingOnCaseClasses">Matching on Case Classes</a></span></dt><dt><span class="sect2"><a href="ch03.html#MatchingOnRegularExpressions">Matching on Regular Expressions</a></span></dt><dt><span class="sect2"><a href="ch03.html#BindingNestedVariablesInCaseClauses">Binding Nested Variables in Case Clauses</a></span></dt><dt><span class="sect2"><a href="ch03.html#TryCatchFinally">Using try, catch, and finally Clauses</a></span></dt><dt><span class="sect2"><a href="ch03.html#ConcludingRemarksOnPatternMatching">Concluding Remarks on Pattern Matching</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch03.html#Enumerations">Enumerations</a></span></dt><dt><span class="sect1"><a href="ch03.html#_recap_and_what_8217_s_next_3">Recap and What’s Next</a></span></dt></dl></dd><dt><span class="chapter"><a href="ch04.html">4. Traits</a></span></dt><dd><dl><dt><span class="sect1"><a href="ch04.html#IntroducingTraits">Introducing Traits</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch04.html#TraitsAsMixins">Traits as Mixins</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch04.html#StackableTraits">Stackable Traits</a></span></dt><dt><span class="sect1"><a href="ch04.html#ConstructingTraits">Constructing Traits</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch04.html#ClassOrTrait">Class or Trait?</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch04.html#TraitsRecapAndWhatsNext">Recap and What’s Next</a></span></dt></dl></dd><dt><span class="chapter"><a href="ch05.html">5. Basic Object-Oriented Programming in Scala</a></span></dt><dd><dl><dt><span class="sect1"><a href="ch05.html#ClassBasics">Class and Object Basics</a></span></dt><dt><span class="sect1"><a href="ch05.html#ParentClasses">Parent Classes</a></span></dt><dt><span class="sect1"><a href="ch05.html#Constructors">Constructors in Scala</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch05.html#CallingParentClassConstructors">Calling Parent Class Constructors</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch05.html#NestedClasses">Nested Classes</a></span></dt><dt><span class="sect1"><a href="ch05.html#VisibilityRules">Visibility Rules</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch05.html#PublicVisibility">Public Visibility</a></span></dt><dt><span class="sect2"><a href="ch05.html#ProtectedVisibility">Protected Visibility</a></span></dt><dt><span class="sect2"><a href="ch05.html#PrivateVisibility">Private Visibility</a></span></dt><dt><span class="sect2"><a href="ch05.html#ScopedPrivateAndProtectedVisibility">Scoped Private and Protected Visibility</a></span></dt><dt><span class="sect2"><a href="ch05.html#FinalThoughtsVisibility">Final Thoughts on Visibility</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch05.html#BasicOOPRecapAndWhatsNext">Recap and What’s Next</a></span></dt></dl></dd><dt><span class="chapter"><a href="ch06.html">6. Advanced Object-Oriented Programming In Scala</a></span></dt><dd><dl><dt><span class="sect1"><a href="ch06.html#OverridingMembers">Overriding Members of Classes and Traits</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch06.html#FinalDeclarations">Attempting to Override final Declarations</a></span></dt><dt><span class="sect2"><a href="ch06.html#OverridingMethods">Overriding Abstract and Concrete Methods</a></span></dt><dt><span class="sect2"><a href="ch06.html#OverridingFields">Overriding Abstract and Concrete Fields</a></span></dt><dt><span class="sect2"><a href="ch06.html#OverridingFieldsInTraits">Overriding Abstract and Concrete Fields in Traits</a></span></dt><dt><span class="sect2"><a href="ch06.html#OverridingFieldsInClasses">Overriding Abstract and Concrete Fields in Classes</a></span></dt><dt><span class="sect2"><a href="ch06.html#OverridingAbstractTypes">Overriding Abstract Types</a></span></dt><dt><span class="sect2"><a href="ch06.html#UniformAccessPrinciple">When Accessor Methods and Fields Are Indistinguishable: The Uniform Access Principle</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch06.html#CompanionObjects">Companion Objects</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch06.html#ApplyMethod">Apply</a></span></dt><dt><span class="sect2"><a href="ch06.html#UnapplyMethod">Unapply</a></span></dt><dt><span class="sect2"><a href="ch06.html#UnapplySeqMethod">Apply and UnapplySeq for Collections</a></span></dt><dt><span class="sect2"><a href="ch06.html#CompanionObjectsAndJavaStaticMethods">Companion Objects and Java Static Methods</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch06.html#CaseClasses">Case Classes</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch06.html#SyntacticSugarForBinaryOperations">Syntactic Sugar for Binary Operations</a></span></dt><dt><span class="sect2"><a href="ch06.html#TheCopyMethodInScalaVersion28">The copy Method in Scala Version 2.8</a></span></dt><dt><span class="sect2"><a href="ch06.html#CaseClassInheritance">Case Class Inheritance</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch06.html#EqualityOfObjects">Equality of Objects</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch06.html#_the_equals_method">The equals Method</a></span></dt><dt><span class="sect2"><a href="ch06.html#_the_and_methods">The == and != Methods</a></span></dt><dt><span class="sect2"><a href="ch06.html#_the_ne_and_eq_methods">The ne and eq Methods</a></span></dt><dt><span class="sect2"><a href="ch06.html#_array_equality_and_the_sameelements_method">Array Equality and the sameElements Method</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch06.html#AdvOOPRecapAndWhatsNext">Recap and What’s Next</a></span></dt></dl></dd><dt><span class="chapter"><a href="ch07.html">7. The Scala Object System</a></span></dt><dd><dl><dt><span class="sect1"><a href="ch07.html#PredefObject">The Predef Object</a></span></dt><dt><span class="sect1"><a href="ch07.html#ClassesAndObjects">Classes and Objects: Where Are the Statics?</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch07.html#PackageObjects">Package Objects</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch07.html#SealedClassHierarchies">Sealed Class Hierarchies</a></span></dt><dt><span class="sect1"><a href="ch07.html#ScalaTypeHierarchy">The Scala Type Hierarchy</a></span></dt><dt><span class="sect1"><a href="ch07.html#Linearization">Linearization of an Object’s Hierarchy</a></span></dt><dt><span class="sect1"><a href="ch07.html#_recap_and_what_8217_s_next_4">Recap and What’s Next</a></span></dt></dl></dd><dt><span class="chapter"><a href="ch08.html">8. Functional Programming in Scala</a></span></dt><dd><dl><dt><span class="sect1"><a href="ch08.html#WhatIsFunctionalProgramming">What Is Functional Programming?</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch08.html#FunctionsInMathematics">Functions in Mathematics</a></span></dt><dt><span class="sect2"><a href="ch08.html#VariablesThatArent">Variables that Aren’t</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch08.html#FunctionalProgrammingInScala">Functional Programming in Scala</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch08.html#FunctionLiteralsAndClosures">Function Literals and Closures</a></span></dt><dt><span class="sect2"><a href="ch08.html#PurityInsideVsOutside">Purity Inside vs. Outside</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch08.html#Recursion">Recursion</a></span></dt><dt><span class="sect1"><a href="ch08.html#TailCalls">Tail Calls and Tail-Call Optimization</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch08.html#TrampolineTailCalls">Trampoline for Tail Calls</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch08.html#FunctionalDataStructures">Functional Data Structures</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch08.html#ListsInFunctionalProgramming">Lists in Functional Programming</a></span></dt><dt><span class="sect2"><a href="ch08.html#MapsInFunctionalProgramming">Maps in Functional Programming</a></span></dt><dt><span class="sect2"><a href="ch08.html#SetsInFunctionalProgramming">Sets in Functional Programming</a></span></dt><dt><span class="sect2"><a href="ch08.html#OtherDataStructuresInFunctionalProgramming">Other Data Structures in Functional Programming</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch08.html#TraversingMappingFilteringFolding">Traversing, Mapping, Filtering, Folding, and Reducing</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch08.html#FunctionalTraversal">Traversal</a></span></dt><dt><span class="sect2"><a href="ch08.html#FunctionalMapping">Mapping</a></span></dt><dt><span class="sect2"><a href="ch08.html#FunctionalFiltering">Filtering</a></span></dt><dt><span class="sect2"><a href="ch08.html#FunctionalFoldingAndReducing">Folding and Reducing</a></span></dt><dt><span class="sect2"><a href="ch08.html#OptionsAndOtherContainers">Functional Options</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch08.html#FPPatternMatching">Pattern Matching</a></span></dt><dt><span class="sect1"><a href="ch08.html#PartialFunctions">Partial Functions</a></span></dt><dt><span class="sect1"><a href="ch08.html#Currying">Currying</a></span></dt><dt><span class="sect1"><a href="ch08.html#Implicits">Implicits</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch08.html#ImplicitConversions">Implicit Conversions</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch08.html#ImplicitFunctionParameters">Implicit Function Parameters</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch08.html#FinalThoughtsOnImplicits">Final Thoughts on Implicits</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch08.html#_call_by_name_call_by_value">Call by Name, Call by Value</a></span></dt><dt><span class="sect1"><a href="ch08.html#LazyVals">Lazy Vals</a></span></dt><dt><span class="sect1"><a href="ch08.html#FunctionalComponentAbstractions">Recap: Functional Component Abstractions</a></span></dt></dl></dd><dt><span class="chapter"><a href="ch09.html">9. Robust, Scalable Concurrency with Actors</a></span></dt><dd><dl><dt><span class="sect1"><a href="ch09.html#ProblemsOfSharedSynchronizedState">The Problems of Shared, Synchronized State</a></span></dt><dt><span class="sect1"><a href="ch09.html#_actors">Actors</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch09.html#_actors_in_abstract">Actors in Abstract</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch09.html#_actors_in_scala">Actors in Scala</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch09.html#_sending_messages_to_actors">Sending Messages to Actors</a></span></dt><dt><span class="sect2"><a href="ch09.html#_the_mailbox">The Mailbox</a></span></dt><dt><span class="sect2"><a href="ch09.html#_actors_in_depth">Actors in Depth</a></span></dt><dt><span class="sect2"><a href="ch09.html#_effective_actors">Effective Actors</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch09.html#_traditional_concurrency_in_scala_threading_and_events">Traditional Concurrency in Scala: Threading and Events</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch09.html#_one_off_threads">One-Off Threads</a></span></dt><dt><span class="sect2"><a href="ch09.html#_using_literal_java_util_concurrent_literal">Using java.util.concurrent</a></span></dt><dt><span class="sect2"><a href="ch09.html#_events">Events</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch09.html#_recap_and_what_s_next">Recap and What’s Next</a></span></dt></dl></dd><dt><span class="chapter"><a href="ch10.html">10. Herding XML in Scala</a></span></dt><dd><dl><dt><span class="sect1"><a href="ch10.html#_reading_xml">Reading XML</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch10.html#_exploring_xml">Exploring XML</a></span></dt><dt><span class="sect2"><a href="ch10.html#_looping_amp_matching_xml">Looping &amp; Matching XML</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch10.html#_writing_xml">Writing XML</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch10.html#_a_real_world_example">A Real-World Example</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch10.html#_recap_and_what_s_next_2">Recap and What’s Next</a></span></dt></dl></dd><dt><span class="chapter"><a href="ch11.html">11. Domain-Specific Languages in Scala</a></span></dt><dd><dl><dt><span class="sect1"><a href="ch11.html#InternalDSLs">Internal DSLs</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch11.html#APayrollInternalDSL">A Payroll Internal DSL</a></span></dt><dt><span class="sect2"><a href="ch11.html#InternalDSLs-InfixOperatorNotation">Infix Operator Notation</a></span></dt><dt><span class="sect2"><a href="ch11.html#InternalDSLs-ImplicitConversions-UserDefinedTypes">Implicit Conversions and User Defined Types</a></span></dt><dt><span class="sect2"><a href="ch11.html#InternalDSLs-Apply">Apply Methods</a></span></dt><dt><span class="sect2"><a href="ch11.html#_payroll_rules_dsl_implementation">Payroll Rules DSL Implementation</a></span></dt><dt><span class="sect2"><a href="ch11.html#InternalDSLsFinalThoughts">Internal DSLs: Final Thoughts</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch11.html#ExternalDSLsWithCombinatorParsers">External DSLs with Parser Combinators</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch11.html#_about_parser_combinators">About Parser Combinators</a></span></dt><dt><span class="sect2"><a href="ch11.html#APayrollExternalDSL">A Payroll External DSL</a></span></dt><dt><span class="sect2"><a href="ch11.html#AScalaImplementationExternalDSLGrammar">A Scala Implementation of the External DSL Grammar</a></span></dt><dt><span class="sect2"><a href="ch11.html#_generating_paychecks_with_the_external_dsl">Generating Paychecks with the External DSL</a></span></dt><dt><span class="sect2"><a href="ch11.html#ExternalDSLsFinalThoughts">Internal vs. External DSLs: Final Thoughts</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch11.html#_recap_and_what_s_next_3">Recap and What’s Next</a></span></dt></dl></dd><dt><span class="chapter"><a href="ch12.html">12. The Scala Type System</a></span></dt><dd><dl><dt><span class="sect1"><a href="ch12.html#ReflectingOnTypes">Reflecting on Types</a></span></dt><dt><span class="sect1"><a href="ch12.html#ParameterizedTypes">Understanding Parameterized Types</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch12.html#Manifests">Manifests</a></span></dt><dt><span class="sect2"><a href="ch12.html#ParameterizedMethods">Parameterized Methods</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch12.html#VarianceUnderInheritance">Variance Under Inheritance</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch12.html#VarianceOfMutableTypes">Variance of Mutable Types</a></span></dt><dt><span class="sect2"><a href="ch12.html#VarianceInScalaVsJava">Variance In Scala vs. Java</a></span></dt><dt><span class="sect2"><a href="ch12.html#ImplementationNotes">Implementation Notes</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch12.html#TypeBounds">Type Bounds</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch12.html#UpperTypeBounds">Upper Type Bounds</a></span></dt><dt><span class="sect2"><a href="ch12.html#LowerTypeBounds">Lower Type Bounds</a></span></dt><dt><span class="sect2"><a href="ch12.html#ACloserLookAtLists">A Closer Look at Lists</a></span></dt><dt><span class="sect2"><a href="ch12.html#ViewsAndViewBounds">Views and View Bounds</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch12.html#NothingAndNull">Nothing and Null</a></span></dt><dt><span class="sect1"><a href="ch12.html#_understanding_abstract_types">Understanding Abstract Types</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch12.html#_parameterized_types_vs_abstract_types">Parameterized Types vs. Abstract Types</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch12.html#PathDependentTypes">Path-Dependent Types</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch12.html#_c_this">C.this</a></span></dt><dt><span class="sect2"><a href="ch12.html#_c_super">C.super</a></span></dt><dt><span class="sect2"><a href="ch12.html#_path_x">path.x</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch12.html#ValueTypes">Value Types</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch12.html#_type_designators">Type Designators</a></span></dt><dt><span class="sect2"><a href="ch12.html#_tuples">Tuples</a></span></dt><dt><span class="sect2"><a href="ch12.html#_parameterized_types">Parameterized Types</a></span></dt><dt><span class="sect2"><a href="ch12.html#_annotated_types">Annotated Types</a></span></dt><dt><span class="sect2"><a href="ch12.html#_compound_types">Compound Types</a></span></dt><dt><span class="sect2"><a href="ch12.html#_infix_types">Infix Types</a></span></dt><dt><span class="sect2"><a href="ch12.html#FunctionTypes">Function Types</a></span></dt><dt><span class="sect2"><a href="ch12.html#TypeProjections">Type Projections</a></span></dt><dt><span class="sect2"><a href="ch12.html#_singleton_types">Singleton Types</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch12.html#SelfTypeAnnotations">Self Type Annotations</a></span></dt><dt><span class="sect1"><a href="ch12.html#StructuralTypes">Structural Types</a></span></dt><dt><span class="sect1"><a href="ch12.html#ExistentialTypes">Existential Types</a></span></dt><dt><span class="sect1"><a href="ch12.html#InfiniteDataStructuresAndLaziness">Infinite Data Structures and Laziness</a></span></dt><dt><span class="sect1"><a href="ch12.html#_recap_and_what_8217_s_next_5">Recap and What’s Next</a></span></dt></dl></dd><dt><span class="chapter"><a href="ch13.html">13. Application Design</a></span></dt><dd><dl><dt><span class="sect1"><a href="ch13.html#Annotations">Annotations</a></span></dt><dt><span class="sect1"><a href="ch13.html#EnumerationsVsPatternMatching">Enumerations vs. Pattern Matching</a></span></dt><dt><span class="sect1"><a href="ch13.html#ThoughtsOnAnnotationsAndEnumerations">Thoughts On Annotations and Enumerations</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch13.html#EnumerationsVsCaseClassesAndPatternMatching">Enumerations vs. Case Classes and Pattern Matching</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch13.html#UsingNullsVsOptions">Using Nulls vs. Options</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch13.html#OptionsAndForComprehensions">Options and For Comprehensions</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch13.html#ExceptionsAndTheAlternatives">Exceptions and the Alternatives</a></span></dt><dt><span class="sect1"><a href="ch13.html#ScalableAbstractions">Scalable Abstractions</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch13.html#FineGrainedVisibilityRules">Fine-Grained Visibility Rules</a></span></dt><dt><span class="sect2"><a href="ch13.html#MixinComposition">Mixin Composition</a></span></dt><dt><span class="sect2"><a href="ch13.html#SelfTypeAnnotationsAndAbstractTypeMembers">Self-Type Annotations and Abstract Type Members</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch13.html#EffectiveTraitsDesign">Effective Design of Traits</a></span></dt><dt><span class="sect1"><a href="ch13.html#DesignPatterns">Design Patterns</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch13.html#VisitorAlternativeInScala">The Visitor Pattern: A Better Alternative</a></span></dt><dt><span class="sect2"><a href="ch13.html#DependencyInjectionInScala">Dependency Injection in Scala: The Cake Pattern</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch13.html#DesignByContractExample">Better Design with Design By Contract</a></span></dt><dt><span class="sect1"><a href="ch13.html#_recap_and_what_s_next_4">Recap and What’s Next</a></span></dt></dl></dd><dt><span class="chapter"><a href="ch14.html">14. Scala Tools, Libraries and IDE Support</a></span></dt><dd><dl><dt><span class="sect1"><a href="ch14.html#CommandLineTools">Command Line Tools</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch14.html#CommandLineToolScalac">scalac Command Line Tool</a></span></dt><dt><span class="sect2"><a href="ch14.html#CommandLineToolScala">The scala Command Line Tool</a></span></dt><dt><span class="sect2"><a href="ch14.html#CommandLineToolDecompilers">The scalap, javap, and jad Command Line Tools</a></span></dt><dt><span class="sect2"><a href="ch14.html#CommandLineToolScaladoc">The scaladoc Command Line Tool</a></span></dt><dt><span class="sect2"><a href="ch14.html#CommandLineToolSbaz">The sbaz Command Line Tool</a></span></dt><dt><span class="sect2"><a href="ch14.html#CommandLineToolFsc">The fsc Command Line Tool</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch14.html#BuildTools">Build Tools</a></span></dt><dt><span class="sect1"><a href="ch14.html#IntegrationWithIDEs">Integration with IDEs</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch14.html#_eclipse">Eclipse</a></span></dt><dt><span class="sect2"><a href="ch14.html#_intellij">IntelliJ</a></span></dt><dt><span class="sect2"><a href="ch14.html#_netbeans">NetBeans</a></span></dt><dt><span class="sect2"><a href="ch14.html#_text_editors">Text Editors</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch14.html#_test_driven_development_in_scala">Test-Driven Development in Scala</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch14.html#ScalaTest">ScalaTest</a></span></dt><dt><span class="sect2"><a href="ch14.html#ScalaSpecs">Specs</a></span></dt><dt><span class="sect2"><a href="ch14.html#ScalaCheck">ScalaCheck</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch14.html#OtherLibraries">Other Notable Scala Libraries and Tools</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch14.html#Lift">Lift</a></span></dt><dt><span class="sect2"><a href="ch14.html#Scalaz">Scalaz</a></span></dt><dt><span class="sect2"><a href="ch14.html#Scalax">Scalax</a></span></dt><dt><span class="sect2"><a href="ch14.html#MetaScala">MetaScala</a></span></dt><dt><span class="sect2"><a href="ch14.html#JavaRebel">JavaRebel</a></span></dt><dt><span class="sect2"><a href="ch14.html#MiscSmallerLibraries">Miscellaneous Smaller Libraries</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch14.html#JavaInterop">Java Interoperability</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch14.html#_java_and_scala_generics">Java and Scala Generics</a></span></dt><dt><span class="sect2"><a href="ch14.html#FunctionsInJava">Using Scala Functions in Java</a></span></dt><dt><span class="sect2"><a href="ch14.html#JavaBeanProperties">JavaBean Properties</a></span></dt><dt><span class="sect2"><a href="ch14.html#AnyValTypesAndJavaPrimitives">AnyVal Types and Java Primitives</a></span></dt><dt><span class="sect2"><a href="ch14.html#ScalaNamesInJavaCode">Scala Names in Java Code</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch14.html#JavaLibraryInterop">Java Library Interoperability</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch14.html#AspectJInterop">AspectJ</a></span></dt><dt><span class="sect2"><a href="ch14.html#TheSpringFrameworkInterop">The Spring Framework</a></span></dt><dt><span class="sect2"><a href="ch14.html#TerracottaInterop">Terracotta</a></span></dt><dt><span class="sect2"><a href="ch14.html#HadoopInterop">Hadoop</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch14.html#_recap_and_what_s_next_5">Recap and What’s Next</a></span></dt></dl></dd><dt><span class="glossary"><a href="go01.html">Glossary</a></span></dt><dt><span class="appendix"><a href="apa.html">A. References</a></span></dt><dt><span class="index"><a href="ix01.html">Index</a></span></dt></dl></div></div><!-- Comment form -->

   <div id="comment_form_main" class="comment_form">


<h5>You must sign in or <a href="/register">register</a> before commenting</h5>

  <form action="/signin" method="post"><table>
     <tr class="field">
<td class="label" valign="top"><label>Username:</label></td>
<td class="field" colspan="2" valign="top"><input id="username" name="username" type="text" /></td>
</tr>
     <tr class="field">
<td class="label" valign="top"><label></label></td>
<td class="field" colspan="2" valign="top"><input name="redirect_to" type="hidden" value="http://programming-scala.labs.oreilly.com/" /></td>
</tr>
     <tr class="field">
<td class="label" valign="top"><label></label></td>
<td class="field" colspan="2" valign="top"><input name="xml_id" type="hidden" /></td>
</tr>
     <tr class="field">
<td class="label" valign="top"><label>Password:</label></td>
<td class="field" colspan="2" valign="top"><input id="password" name="password" type="password" /></td>
</tr>
  <tr class="field">
<td class="label" valign="top"><label></label></td>
<td class="field" colspan="2" valign="top"><input id="submit" name="submit" type="submit" value="Sign in" /></td>
</tr>
  </table></form>



</div>


<div class="navfooter"><hr /><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"> </td><td width="20%" align="center"> </td><td width="40%" align="right"> <a accesskey="n" href="pr01.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top"> </td><td width="20%" align="center"> </td><td width="40%" align="right" valign="top"> Preface</td></tr></table></div><div class="footer-copyright"><p class="copyright">Copyright © 2008 O’Reilly Media    </p>
<p>All trademarks and registered trademarks appearing on labs.oreilly.com are the property of their respective owners.</p>
<p><a href="http://oreilly.com/oreilly/privacy.csp">Privacy Policy</a> &amp; <a href="http://oreilly.com/terms/">Terms of Service</a></p>

</div></body></html>
