<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>body blog: we are looking for (interview guidelines)</title>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <link rel="alternate" type="application/rss+xml" title="body - rss" href="http://feeds.feedburner.com/amaximov" />
  <link rel="alternate" type="application/atom+xml" title="body - atom" href="http://feeds.feedburner.com/amaximov" />
  

  <script src="/javascripts/prototype.js" type="text/javascript"></script>

  <link href="/stylesheets/application.css" rel="stylesheet" type="text/css" />

  <script src="/javascripts/codehighlighter/code_highlighter.js" type="text/javascript"></script>
  <script src="/javascripts/codehighlighter/javascript.js" type="text/javascript"></script>
  <script src="/javascripts/codehighlighter/html.js" type="text/javascript"></script>
  <script src="/javascripts/codehighlighter/ruby.js" type="text/javascript"></script>
  <script src="/javascripts/codehighlighter/css.js" type="text/javascript"></script>
  

</head>
<body>
<div id="container">
  <div id="header">
    <h1><span><a href="/">body blog</a></span></h1>
    <h2>ramblings on tech and work</h2>
  </div>

  <div id="page">
    <div id="content">
      
  
<!--
<rdf:RDF
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/"
  xmlns:dc="http://purl.org/dc/elements/1.1/">
<rdf:Description
  rdf:about=""
  trackback:ping=""
  dc:title="we are looking for (interview guidelines)"
  dc:identifier="/2007/6/29/we-are-looking-for-interview-guidlines"
  dc:description="<p>this is something transferred from an internal wiki; i just finished "<a href="http://stevemcconnell.com/psd.htm" title="professional software development">professional software development</a>" at the time and some of its ideas found their way..."
  dc:creator="anton"
  dc:date="June 29, 2007 00:49" />
</rdf:RDF>
-->

<div class="hentry" id="article-39">
  <h2 class="entry-title">
    <a href="/2007/6/29/we-are-looking-for-interview-guidlines" title="we are looking for (interview guidelines)">we are looking for (interview guidelines)</a>
    
  </h2>
  <div class="vcard">
  Posted by <span class="fn">anton</span>
</div>
<abbr class="published" title="2007-06-29T00:49:00+00:00">on Friday, June 29, 2007</abbr>
<br class="clear" />
  <div class="entry-content">
  <p>this is something transferred from an internal wiki; i just finished "<a href="http://stevemcconnell.com/psd.htm" title="professional software development">professional software development</a>" at the time and some of its ideas found their way into the post. granted this is mostly talk, and the hardest part (the skill and the art!) is actually being able to sense all of this in a conversation. usual disclaimers - this was an architecture team for a big company, but suspend all the negative connotations associated with the title (this by itself is a topic for a whole post).</p>

<p>another disclaimer: our technical problems were not that hard at all, so we needed someone with solid CS background <em>and</em> software engineering background (source control, testing, builds, etc). everything else technology-wise is easy to teach, given the right personality. which means that in our case personality is far more important that any skills above the basic ones.</p>

<img src="/assets/2007/8/27/formulae.jpg"/>

<h1>what we are looking for: in general</h1>
<ul>
<li>hands-on</li>
<li>strong current technical skills</li>
<li>solid technical foundation (CS/engineering/years of various hands-on)</li>
<li>wide breadth of knowledge and experience</li>
<li>ability to see direction, high-level design, and at the same time to be able and jump in to do development/troubleshooting. naturally people will be skewed one or the other way, but presence of both is important</li>
<li>passion - they do this stuff in their spare time, they read blogs/articles, they buy books, they go to conferences; they are excited to babble about it</li>
<li>smart (do not create busy work and slave for 24/7; ask me about "pray-and-rerun for 72 hrs" some time)</li>
<li>gets stuff done (ability to drive stuff to completion, not just fluffy ideas)</li>
<li>good match for the team culturally (openness, desire to share and learn)</li>
<li>self-starter - actively seek solutions, actively challenge status quo</li>
<li>learns fast</li>
<li>fast-paced</li>
<li>balance of operations/design/architecture/implementation/support/business knowledge</li>
<li>articulate (can explain a bigger picture for the project they've worked on; can explain complex concepts at high-level, easy to talk to, etc)</li>
</ul>

<p>here's a little personal observation regarding the last point - past few months i've been on both sides of the interviewing fence and it is interesting to note that with good people the conversation just flows - infact during some of the interviews i come up with some interesting ideas as i am talking through things - the sparks fly, the air sizzles, and i am truly enjoying it, no matter which side of the table i am on. at the same time with <strike>stupid</strike>thicker people i find myself getting dumber and dumber - i start stuttering, repeating myself, going into unnecessary details, eventualy getting frustrated and discouraged. i know it is a problem of mine to an extent, but i think over the years i have come to treat it as a rather objective indicator of how well a person can fit in a team with me.</p>

<h1>what we are looking for: great designers</h1>
<img src="/assets/2007/8/27/writing_computers.jpg" align="right" hspace="10"/>
<ul>
<li>have a list of patterns they can apply to solve problems (they've been around the block a few times and know a few things)</li>
<li>mastery of their toolset (they <em>have</em> a toolset, they know what to use when, and they actually do it)</li>
<li>seek out criticism (do not hide in the corner and spew binaries from time to time - they come out into the open and demand feedback)</li>
<li>strive to reduce complexity (make it as simple as possible, so that bugs have nowhere to hide; this is a great skill and i am fortunate to know a few folks that truly shine at it, cutting through layers of bullshit and communication problems)</li>
<li>have experience on failed projects and made a point to learn from it (or any mistakes - true learning does not come from the manuals that teach you how things are supposed to work, but from real life lessons that teach you when stuff does not work and why)</li>
<li>have a lot of alternatives, often wrong, but quickly correct themselves (a great designer should be able to generate ideas)</li>
<li>they keep trying alternatives even when others have given up - i.e. do not give up easily or settle with "this would do" - drive to completion, try other options (this is a great trait and i often have to kick myself to strive for it)</li>
<li>not afraid of using brute force (i.e. pragmatic)</li>
<li>creative to be able to generate numerous solutions (didn't i just say that above?)</li>
<li>curious (must always try to learn, figure out how things work, research, investigate, never settle for "someone else knows how it works"  - always ask questions; this could be one of the single most important traits)</li>
<li>high energy (not sleepy, lazy - driven to get stuff done; also see curiosity)</li>
<li>self-confident and independent to research things that others think are silly, unworkable, foolish (i've been burned by this)</li>
<li>have and value their own judgment (see above) - never refer to "this is what someone else told me, or this is not my fault, this is what i have been told" but never made an effort to verify</li>
<li>restless desire to create - build things, make things work, figure things out, tinker</li>
<li>not satisfied to merely learn facts - but driven to apply them (sometimes i catch myself doing just that)</li>
<li>no lone heroes - we need those that can raise the value of a team, work with others, be open (share their knowledge, willing to teach, to educate, and to be taught and educated). <em>''according to many studies the greatest contributor to overall prductivity was team cohesiveness, not the individual heroes''</em> says mr. mcconnell (also, keep in mind the <a href="http://video.google.nl/videoplay?docid=-4216011961522818645"><em>bus factor</em></a>)
<li>community involvement (reading books, publications, blogs, magazines, attending and speaking at a conferences) - all of it is a sign of a commitment, treating this as a profession which does require life-long learning (so in the end it is merely a sign of professionalism, not something that is out of the ordinary); of course beware of talkers that do just that</li>
<li>do not fall into complacency - always strive to improve (too many that would not challenge themselves and others, settle down)</li>
</ul>

<h1>related reading</h1>
<ul>
<li><a href="http://steve-yegge.blogspot.com/2006/03/truth-about-interviewing.html" title="http://steve-yegge.blogspot.com/2006/03/truth-about-interviewing.html">http://steve-yegge.blogspot.com/2006/03/truth-about-interviewing.html</a></li>
<li><a href="http://steve.yegge.googlepages.com/google-secret-weapon" title="http://steve.yegge.googlepages.com/google-secret-weapon">http://steve.yegge.googlepages.com/google-secret-weapon</a></li>
<li><a href="http://steve.yegge.googlepages.com/five-essential-phone-screen-questions" title="http://steve.yegge.googlepages.com/five-essential-phone-screen-questions">http://steve.yegge.googlepages.com/five-essential-phone-screen-questions</a></li>
<li><a href="http://steve.yegge.googlepages.com/what-you-need-to-know" title="http://steve.yegge.googlepages.com/what-you-need-to-know">http://steve.yegge.googlepages.com/what-you-need-to-know</a></li>
<li><a href="http://steve.yegge.googlepages.com/why-phone-screens-matter" title="http://steve.yegge.googlepages.com/why-phone-screens-matter">http://steve.yegge.googlepages.com/why-phone-screens-matter</a></li>
<li><a href="http://steve.yegge.googlepages.com/miracle-interview" title="http://steve.yegge.googlepages.com/miracle-interview">http://steve.yegge.googlepages.com/miracle-interview</a></li>
</ul>

<ul>
<li><a href="http://www.joelonsoftware.com/articles/GuerrillaInterviewing3.html" title="http://www.joelonsoftware.com/articles/GuerrillaInterviewing3.html">http://www.joelonsoftware.com/articles/GuerrillaInterviewing3.html</a></li>
<li><a href="http://www.joelonsoftware.com/articles/ThePhoneScreen.html" title="http://www.joelonsoftware.com/articles/ThePhoneScreen.html">http://www.joelonsoftware.com/articles/ThePhoneScreen.html</a></li>
<li><a href="http://www.joelonsoftware.com/articles/FindingGreatDevelopers.html" title="http://www.joelonsoftware.com/articles/FindingGreatDevelopers.html">http://www.joelonsoftware.com/articles/FindingGreatDevelopers.html</a></li>
<li><a href="http://www.joelonsoftware.com/articles/FieldGuidetoDevelopers.html" title="http://www.joelonsoftware.com/articles/FieldGuidetoDevelopers.html">http://www.joelonsoftware.com/articles/FieldGuidetoDevelopers.html</a></li>
<li><a href="http://www.joelonsoftware.com/articles/ResumeRead.html" title="http://www.joelonsoftware.com/articles/ResumeRead.html">http://www.joelonsoftware.com/articles/ResumeRead.html</a></li>
<li><a href="http://www.joelonsoftware.com/articles/HighNotes.html" title="http://www.joelonsoftware.com/articles/HighNotes.html">http://www.joelonsoftware.com/articles/HighNotes.html</a></li>
<li><a href="http://www.joelonsoftware.com/articles/SortingResumes.html" title="http://www.joelonsoftware.com/articles/SortingResumes.html">http://www.joelonsoftware.com/articles/SortingResumes.html</a></li>
</ul>

<ul><li><a href="http://www.artima.com/wbc/interprogP.html" title="http://www.artima.com/wbc/interprogP.html">http://www.artima.com/wbc/interprogP.html</a></li></ul>

<ul>
<li><a href="http://software.ericsink.com/bos/Hazards_of_Hiring.html" title="http://software.ericsink.com/bos/Hazards_of_Hiring.html">http://software.ericsink.com/bos/Hazards_of_Hiring.html</a></li>
<li><a href="http://software.ericsink.com/entries/No_Great_Hackers.html" title="http://software.ericsink.com/entries/No_Great_Hackers.html">http://software.ericsink.com/entries/No_Great_Hackers.html</a></li>
</ul>

<ul><li><a href="http://www.paulgraham.com/hiring.html" title="http://www.paulgraham.com/hiring.html">http://www.paulgraham.com/hiring.html</a></li></ul>

<ul>
<li><a href="http://blog.guykawasaki.com/2006/01/the_art_of_recr.html" title="http://blog.guykawasaki.com/2006/01/the_art_of_recr.html">http://blog.guykawasaki.com/2006/01/the_art_of_recr.html</a></li>
<li><a href="http://blog.guykawasaki.com/2006/03/the_art_of_recr.html" title="http://blog.guykawasaki.com/2006/03/the_art_of_recr.html">http://blog.guykawasaki.com/2006/03/the_art_of_recr.html</a></li>
<li><a href="http://blog.guykawasaki.com/2006/08/the_inside_scoo.html" title="http://blog.guykawasaki.com/2006/08/the_inside_scoo.html">http://blog.guykawasaki.com/2006/08/the_inside_scoo.html</a></li>
</ul>

<ul><li><a href="http://googleresearch.blogspot.com/2006/03/hiring-lake-wobegon-strategy.html" title="http://googleresearch.blogspot.com/2006/03/hiring-lake-wobegon-strategy.html">http://googleresearch.blogspot.com/2006/03/hiring-lake-wobegon-strategy.html</a></li></ul>

<ul><li><a href="http://hiring.inc.com/columns/jrothman/20050412.html" title="http://hiring.inc.com/columns/jrothman/20050412.html">http://hiring.inc.com/columns/jrothman/20050412.html</a></li></ul>

<ul><li><a href="http://www.scottberkun.com/essays/39-how-to-interview-and-hire-people/" title="http://www.scottberkun.com/essays/39-how-to-interview-and-hire-people/">http://www.scottberkun.com/essays/39-how-to-interview-and-hire-people/</a></li></ul>

<ul><li><a href="http://sethgodin.typepad.com/seths_blog/2006/09/the_end_of_the_.html" title="http://sethgodin.typepad.com/seths_blog/2006/09/the_end_of_the_.html">http://sethgodin.typepad.com/seths_blog/2006/09/the_end_of_the_.html</a></li></ul>
  
</div>
  <ul class="meta">
  
  
  <li>
    Tags: <a href="/tags/people" rel="tag" title="people">people</a>&nbsp;
  </li>
  
  <li>
    Meta: 
    
    <a href="/2007/6/29/we-are-looking-for-interview-guidlines" title="permalink">permalink</a>
    
  </li>
</ul>
</div>

<h5><a name="comments">Comments</a></h5>
<p><a href="#comment-form">Leave a response</a></p>
<div id="comments_div">
  <ol id="comments" class="comments">
    
    <li class="comment" id="comment-419">
      <div class="author">
        <cite><span class="author"><span>Simon Grantham</span></span></cite> &#150; 
        <abbr title="February 26, 2008 04:07"><span class="date">February 26, 2008 @ 04:07 AM</span></abbr>
      </div>
      <div class="content">
        Just belatedly ran across this, so please feel free to email me if you want some additional interview guidelines as I have had good success hiring techies (takes 1 to know 1).  Having 35 years experience, I've pretty much seen it all and what you are looking for is great implementors not designers.  E.g. anyone with a modicum of understanding of software can do a half decent design.  KISS is in the implementation.  I don't have enough fingers to count how many times, being requested to add a feature to some other developer's application, and that started from a reasonable design, had to do the following because I didn't want to be responsible for ongoing maintenance.

1. figure out what were the actual pieces that did the application
2. throw out the pieces that were managing the other pieces (usually about 50 percent)
3. reorganize the remaining into a simple, reliable application

Besides the usual "can write code" skill, what you are looking for is a skill that happens to  cover both technical and some of the "soft skills" you want (more on the latter following).  This skill is the quick understanding of the dependencies of things and then reducing them to, only, direct dependencies.  This was the point of creations like OOP and database normalization, and finite state machines.  But, it so hard for people to learn because what people learn from is libraries (JDK libs, C# libs, swing, MFC, etc.).  These aid and abet bad implementation. 

When you have this reductionist skill, you tend to avoid the kind of ego that goes with "I'm the best java jockey around" because, instead of being all puffed up at what you can build based on everybody else's libraries, you are aware of the unique set of dependencies every situation has and respond accordingly.

This is also the troubleshooting skill.  Everything affects everything, just like chaos theory, but there is always a chain of direct dependencies.  If you recognize them quickly the problem has the signature of the specific dependencies involved.  If you don't, you know how to recursively divide the dependencies in half to isolate the problem.

So how do you interview.

1.  Test the veracity of their resume by asking a technical question of scope.  E.g.  Resume says multi-threaded applications, question is, "how would you implement a thread factory".
2. Ask any questions and see how they observe and highlight the dependencies in their answers.
3.  Observer their passion for chasing down solutions without big ego being part of the response.

"For want of a nail, the war was lost",

Simon




      </div>
    </li>
    
  </ol>
</div>



    </div>

    <div id="sidebar">

      <div class="sidebar-node">
        <div id="search" class="search">
          <form action="/search" id="sform" method="get" name="sform">
            <p><input type="text" id="q" name="q" value="" /></p>
          </form>
        </div>
      </div>

      

      

      
      <div class="sidebar-node">
        <h3>Tags</h3>
        <ul>
        
          <li><a href="/tags/bile" rel="tag" title="bile">bile</a> (3)</li>
        
          <li><a href="/tags/conference" rel="tag" title="conference">conference</a> (8)</li>
        
          <li><a href="/tags/db" rel="tag" title="db">db</a> (1)</li>
        
          <li><a href="/tags/export" rel="tag" title="export">export</a> (7)</li>
        
          <li><a href="/tags/humor" rel="tag" title="humor">humor</a> (1)</li>
        
          <li><a href="/tags/java" rel="tag" title="java">java</a> (7)</li>
        
          <li><a href="/tags/meta" rel="tag" title="meta">meta</a> (4)</li>
        
          <li><a href="/tags/people" rel="tag" title="people">people</a> (27)</li>
        
          <li><a href="/tags/qcon" rel="tag" title="qcon">qcon</a> (1)</li>
        
          <li><a href="/tags/quote" rel="tag" title="quote">quote</a> (6)</li>
        
          <li><a href="/tags/reading" rel="tag" title="reading">reading</a> (6)</li>
        
          <li><a href="/tags/ruby" rel="tag" title="ruby">ruby</a> (7)</li>
        
          <li><a href="/tags/security" rel="tag" title="security">security</a> (2)</li>
        
          <li><a href="/tags/software" rel="tag" title="software">software</a> (16)</li>
        
          <li><a href="/tags/tip" rel="tag" title="tip">tip</a> (16)</li>
        
          <li><a href="/tags/tips" rel="tag" title="tips">tips</a> (2)</li>
        
          <li><a href="/tags/work" rel="tag" title="work">work</a> (11)</li>
        
        </ul>
      </div>
      

    <div class="sidebar-node">
        <script type="text/javascript" src="https://www.google.com/reader/ui/publisher-en.js"></script>
        <script type="text/javascript" src="https://www.google.com/reader/public/javascript/user/17111767248987835716/state/com.google/broadcast?n=10&callback=GRC_p(%7Bc%3A%22gray%22%2Ct%3A%22anton's%20shared%20items%22%2Cs%3A%22true%22%2Cb%3A%22false%22%7D)%3Bnew%20GRC"></script>
    </div>

    </div>
    <br style="clear:both;" />

  </div>

  <div id="footer">
    <hr />
    <p><a href="/">body blog</a> - ramblings on tech and work</p>
  </div>

</div>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-653958-1";
urchinTracker();
</script>
</body>
</html>