<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Software Build Solutions | Electric Cloud</title>
<link rel="pingback" href="http://www.electric-cloud.com/blog/xmlrpc.php" />

<link rel="stylesheet" href="/css/default.css" media="screen" />
<style type="text/css" media="screen">
@import "http://www.electric-cloud.com/blog/wp-content/themes/ec-theme/style.php";</style>
<link rel="stylesheet" href="/css/quickmenu.css" type="text/css" />
<script type="text/javascript" src="/js/quickmenu.js"></script>
<script type="text/javascript" src="/js/jquery-1.4.2.min.js"></script> 
<script type="text/javascript" src="/js/jquery.innerfade.js"></script>
<script type="text/javascript">
$(document).ready( 
function(){
		$('ul#categoryfade').innerfade({
		speed: 'fast',
		timeout: 10000,
		type: 'sequence',
		containerheight: '420px'
		});
});
</script>

</head>
<body>

<div class="container">

<div class="header">
<div class="logo"><a href="/"><img src="/images/common/electric-cloud_logo.gif" alt="Electric Cloud" width="268" height="90" border="0" /></a></div>
<div class="subnav">
	<div class="subnav1"><a href="/" class="subnavitem">home</a> | <a href="/contact/" class="subnavitem">contact us</a>&nbsp;</div>
    <div class="search-form">
	<script type="text/javascript">
	function clickclear(thisfield, defaulttext) {
	if (thisfield.value == defaulttext) {
		thisfield.value = "";
		}
	}
	function clickrecall(thisfield, defaulttext) {
	if (thisfield.value == "") {
		thisfield.value = defaulttext;
		}
	}
	</script>
	<form method="get" id="searchform" action="/blog/index.php">
	<div><input type="text" id="s" name="s" size="25" value="Search the blog ..." onclick="clickclear(this, 'Search the blog ...')" onblur="clickrecall(this,'Search the blog ...')" /></div>    
	</form>
    </div>
</div>
<div class="mainnav">
<ul id="qm0" class="qmmc">
<li><a class="qmparent" href="/company/">COMPANY</a>
	<ul>
	<li><a href="/company/index.php">Overview</a></li><li><a href="/company/management.php">Management</a></li><li><a href="/company/board.php">Board of Directors</a></li><li><a href="/company/careers.php">Careers</a></li><li><a href="/company/software-production-management.php">Software Production<br />Management</a></li>	</ul></li>
<li><a class="qmparent" href="/products/">PRODUCTS</a>
	<ul>
	<li><a href="/products/index.php">Overview</a></li><li><a href="/products/electriccommander.php">ElectricCommander</a></li><li><a href="/products/electricaccelerator.php">ElectricAccelerator</a></li><li><a href="/products/electricinsight.php">ElectricInsight</a></li><li><a href="/products/sparkbuild.php">SparkBuild</a></li>	</ul></li>
<li><a class="qmparent" href="/solutions/">SOLUTIONS</a>
	<ul>
	<li><a href="/solutions/index.php">Overview</a></li><li><a href="/solutions/agile-software-development.php">Agile Development</a></li><li><a href="/solutions/distributed-software-development.php">Distributed Development</a></li><li><a href="/solutions/virtualized-build-and-test.php">Virtualization</a></li><li><a href="/solutions/test_automation.php">Test Automation</a></li><li><a href="/solutions/centralization-and-control.php">Centralization &amp; Control</a></li><li><a href="/solutions/compliance.php">Compliance</a></li><li><a href="/solutions/build-management.php">Build Management</a></li><li><a href="/solutions/build-acceleration.php">Build Acceleration</a></li><li><a href="/solutions/continuous-integration.php">Continuous Integration</a></li><li><a href="/solutions/cloud-computing.php">Cloud Computing</a></li>	</ul></li>
<li><a class="qmparent" href="/customers/">CUSTOMERS</a>
	<ul>
	<li><a href="/customers/index.php">Overview</a></li><li><a href="/customers/customer-case-studies.php">Case Studies</a></li><li><a href="/customers/customer-movies.php">Movies</a></li>	</ul></li>
<li><a class="qmparent" href="/partners/">PARTNERS</a>
	<ul>
    <li><a href="/partners/index.php">Overview</a></li><li><a href="/partners/technology-partners.php">Technology Partners</a></li><li><a href="/partners/channel-partners.php">Channel Partners</a></li><li><a href="/partners/become-a-partner.php">Become a Partner</a></li>	</ul></li>
<li><a class="qmparent" href="/news/">NEWS &amp; EVENTS</a>
	<ul>
	<li><a href="/news/index.php">In the News</a></li><li><a href="/news/press-releases.php">Press Releases</a></li><li><a href="/news/events.php">Events</a></li>	</ul></li>
<li><a class="qmparent" href="/resources/">RESOURCES</a>
	<ul>
	<li><a href="/resources/index.php">Overview</a></li><li><a href="/resources/document-library.php">Document Library</a></li><li><a href="/resources/multimedia-library.php">Multimedia Library</a></li><li><a href="/resources/webinars.php">Webinars</a></li><li><a href="/resources/mrmake.php">Ask Mr. Make</a></li><li><a href="/blog/">Blog</a></li><li><a href="/resources/more.php">References</a></li>	</ul></li>
<li class="qmclear">&nbsp;</li></ul>

<!-- Create Menu  -->
<script type="text/javascript">qm_create(0,false,0,500,false,false,false,false,false);</script>

</div>
<div class="community">
	<div class="communitynav"><a href="/services/community.php" class="communitynavitem">community</a> | <a href="/services/index.php" class="communitynavitem">services &amp; support</a></div>
</div>
</div>

<div class="middle">
	<div class="left-nav">
	<div class="leftnav-top"><div style="height: 13px; clear: both;">&nbsp;</div>BLOG</div>
    <div class="leftnav-bottom">
	<div class="leftnavitemon" style="margin-top: 10px; height: 20px;">Categories</div>
    <ul>	<li class="cat-item cat-item-3"><a href="http://www.electric-cloud.com/blog/category/build-test-deploy-best-practices/" title="View all posts filed under Build-Test-Deploy Best Practices">Build-Test-Deploy Best Practices</a>
</li>
	<li class="cat-item cat-item-4"><a href="http://www.electric-cloud.com/blog/category/cloud-computing-and-virtualization/" title="View all posts filed under Cloud Computing and Virtualization">Cloud Computing and Virtualization</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.electric-cloud.com/blog/category/electric-cloud-solutions/" title="ElectricAccelerator, ElectricCommander, SparkBuild, technical tips, tricks, production automation best practices, general musings">Electric Cloud Solutions</a>
</li>
	<li class="cat-item cat-item-6"><a href="http://www.electric-cloud.com/blog/category/software-development/" title="View all posts filed under Software Development">Software Development</a>
</li>
	<li class="cat-item cat-item-1"><a href="http://www.electric-cloud.com/blog/category/uncategorized/" title="View all posts filed under Uncategorized">Uncategorized</a>
</li>
</ul>
    <div class="leftnavitemon" style="margin-top: 15px; margin-bottom: 5px;">Authors</div>
    <ul><li><a href="http://www.electric-cloud.com/blog/author/anders-wallgren/" title="Posts by Anders Wallgren">Anders Wallgren</a></li><li><a href="http://www.electric-cloud.com/blog/author/dax-farhang/" title="Posts by Dax Farhang">Dax Farhang</a></li><li><a href="http://www.electric-cloud.com/blog/author/eric-melski/" title="Posts by Eric Melski">Eric Melski</a></li><li><a href="http://www.electric-cloud.com/blog/author/erin-curtis/" title="Posts by Erin Curtis">Erin Curtis</a></li><li><a href="http://www.electric-cloud.com/blog/author/martinvr/" title="Posts by martinvr">martinvr</a></li><li><a href="http://www.electric-cloud.com/blog/author/mike-maciag/" title="Posts by Mike Maciag">Mike Maciag</a></li><li><a href="http://www.electric-cloud.com/blog/author/scott-castle/" title="Posts by Scott Castle">Scott Castle</a></li><li><a href="http://www.electric-cloud.com/blog/author/sven-delmas/" title="Posts by Sven Delmas">Sven Delmas</a></li><li><a href="http://www.electric-cloud.com/blog/author/usmanmuzaffar/" title="Posts by usmanmuzaffar">usmanmuzaffar</a></li></ul>
	<div style="height: 30px; clear: both;">&nbsp;</div>
	</div>
    </div>
    
<div class="breadcrumb"><a href="/" class="breadcrumbitem">corporate site home</a> : <a href="/blog/" class="breadcrumbitem">blog home</a></div>
<div class="content"><div class="post-542 post type-post hentry category-software-development tag-electric-cloud-solutions tag-gmake tag-gnu-make tag-testing">
<h2>Using Markov Chains to Generate Test Input</h2>
<span class="submitted">September 15, 2009 &#8212; Eric Melski </span>
<p>One challenge that we&#8217;ve faced at Electric Cloud is how to verify that our makefile parser correctly emulates GNU Make.  We started by generating test cases based on a close reading of the gmake manual.  Then we turned to real-world examples:  makefiles from dozens of open source projects and from our customers.  After several years of this we&#8217;ve accumulated nearly two thousand individual tests of our gmake emulation, and yet we still sometimes find incompatibilities.  We&#8217;re always looking for new ways to test our parser.</p>
<p>
One idea is to generate random text and use that as a &#8220;makefile&#8221;.  Unfortunately, truly random text is almost useless in this regard, because it doesn&#8217;t look anything like a real makefile.  Instead, we can use <a href="http://en.wikipedia.org/wiki/Markov_chain"><i>Markov chains</i></a> to generate random text that is very much like a real makefile.  When we first introduced this technique, we uncovered 13 previously unknown incompatibilities &mdash; at the time that represented 10% of the total defects reported against the parser!  Read on to learn more about Markov chains and how we applied them in practice.<br />
<span id="more-542"></span>
</p>
<p><h3>Markov chains</h3>
</p>
<p>
A Markov chain is simply a sequence of random values in which the next value is in some way dependent on the current value, rather than being completely random.  Consider the case of generating random text one letter at a time, from the set of uppercase English letters (A-Z).  If the sequence is completely random, then for each character generated, any letter is equally probable.  Regardless of what characters you&#8217;ve generated up to this point, you are just as likely to get a <i>D</i> as an <i>X</i> next.  Think of it as if you have a bag of tiles, one for each letter.  With truly random text, you pick one tile and write down the letter on that tile.  Then you return the tile to the bag and pick again.  Lather, rinse, repeat until you&#8217;ve generated as much text as you like.
</p>
<p>
But suppose we said that the probability of the next character is dependent on the last character we generated.  For example, in English text if you run across the letter <i>Q</i> you can be pretty sure that the next character is going to be <i>U</i>.  It&#8217;s almost certainly not going to be <i>X</i>, or <i>Z</i>, etc.  We can build a table that tells us the probabilty that any given letter will be followed by any other letter.  For the letter <i>Q</i>, the table might look like this:
</p>
<table>
<tr>
<td>Letter</td>
<td>Probability of appearing after <i>Q</i></td>
</tr>
<tr>
<td>A</td>
<td>1%</td>
</tr>
<tr>
<td>E</td>
<td>1%</td>
</tr>
<tr>
<td>I</td>
<td>1%</td>
</tr>
<tr>
<td>O</td>
<td>1%</td>
</tr>
<tr>
<td>U</td>
<td>96%</td>
</tr>
<tr>
<td>All others</td>
<td>0%</td>
</tr>
</table>
<p>
We can do a much better job of generating text that looks like English if we use these tables to guide us.  Imagine that instead of one bag of tiles with one tile for each letter, we have one bag for each letter, and we fill each bag with tiles according to the probabilities in our table.  For example, the bag for the letter <i>Q</i> would contain 96 <i>U</i> tiles, and one tile each for <i>A</i>, <i>E</i>, <i>I</i>, and <i>O</i>.  Each time we want to generate a new letter, we look at the last letter we generated, find the bag of tiles corresponding to that letter, and pick out one tile.  After writing down the letter, we return the tile to the bag and repeat the process.  The sequence of letters that we generate in this manner is a simple Markov chain.
</p>
<p>
How do you build the probability tables?  One way is to generate them from some sample input.  If we have a sufficiently large example of text in the target language, we can scan it and count the number of times each letter occurs, and the number of times it is followed by each letter.  Note that it is critical to have a large and varied input.  If the sample is too small, the resulting probability tables won&#8217;t accurately represent the target language.  The generator will only be able to generate the input text itself.
</p>
<p><h3>Markov chains of order <i>m</i></h3>
</p>
<p>
Of course, we don&#8217;t have to limit ourselves to considering just the single previous letter.  For example, if the previous two characters are <i>ST</i>, then the next character is probably a vowel, or maybe an <i>R</i>.  It&#8217;s probably not going to be <i>D</i>, or <i>Q</i>, etc.  Just as before, we can make a table that tells us the probability that any given pair of letters will be followed by any other letter.  And we can keep going, adding more and more of the preceding letters to our formula.  The number of previous characters we use is called the <i>order</i> of the chain, so if we use the previous 4 characters, we would say we have a <i>Markov chain of order 4</i>.
</p>
<p>
The greater the order of the chain, the &#8220;smarter&#8221; our generator becomes, because it is considering more context when choosing letters.  As you can see, the generated text looks more and more like the target language as you increase the order (although after a some point, you get little additional benefit from further increases):
</p>
<table>
<tr>
<td>Order</td>
<td>Result</td>
</tr>
<tr>
<td>0 (purely random)</td>
<td>ehnee.Alr noer ealcra edctn eIi</td>
</tr>
<tr>
<td>1</td>
<td>Pige foule.ce d futht wrion e mara</td>
</tr>
<tr>
<td>2</td>
<td>Prookiname arg-tm aread on achivedging</td>
</tr>
<tr>
<td>3</td>
<td>Yes, and no usinession be</td>
</tr>
<tr>
<td>4</td>
<td>Project that last it make you first, moderneath.</td>
</tr>
</table>
<p><h3>Using Markov chains in testing</h3>
</p>
<p>
In order to use this technique effectively in testing, you need a couple of things besides the generator itself:
</p>
<ol>
<li><b>A large sample input to seed the generator</b>.  As noted, the bigger your sample input text, the higher the quality of the probability tables, and therefore the more varied your generated text will be.  Since we are trying to generate makefiles, we used several megabytes of makefiles from a variety of open-source projects as the sample text.</li>
<li><b>An automated evaluation mechanism</b>.  You have to be able to determine quickly and automatically if a given generated file is processed correctly or not.  Of course, <i>correct</i> can mean many different things here.  It might be as simple as &#8220;does not cause a program crash&#8221;.  In our case, it means &#8220;emake parses this makefile the same way that gmake does&#8221;, so we use gmake as a <a href="http://en.wikipedia.org/wiki/Reference_implementation"><i>reference implementation</i></a>.  Note that it doesn&#8217;t matter if the generated text truly is a completely valid makefile.  In fact most of the time it will not be.  What matters is those cases is that emake and gmake both report the <i>same</i> error.</li>
</ol>
<p>
We wrote a simple shell script to drive the testing process.  First, it uses the generator to produce several random makefiles.  Then it runs each makefile through both gmake and emake, and compares the results.  Any differences are reported for further investigation.
</p>
<p><h3>Conclusion</h3>
</p>
<p>
Verifying the implementation of an emulator for a complex system is hard, especially when the original system has no formal specification.  Using randomly generated input is a useful way to extend the breadth of your testing, and Markov chains make it possible to generate even more useful random input.  Our original implementation of this technique uncovered several previously unknown defects, and it continues to pay dividends both by uncovering new defects and by providing a confidence measure for our emulation.
</p>
<p>
If you want to play with Markov chains yourself, you can download the <a href="http://github.com/emelski/code.melski.net/blob/master/markov/main.cpp">source for the generator used in this article</a>.  NB: the program has only been compiled and used on Linux; on other platforms your mileage may vary.  For more information about Markov chains, I recommend <a href="http://www.cs.bell-labs.com/cm/cs/pearls/sec153.html">Section 15.3 of the excellent book <i>Programming Pearls</i> by Jon Bentley</a>.</p>
<hr />
<p>
If you enjoyed this article about testing techniques, you may enjoy this related article:
</p>
<ul>
<li><a href="http://blog.electric-cloud.com/2009/05/05/delta-the-coolest-tool-youve-never-heard-of/">Delta: the coolest tool you&#8217;ve never heard of</a></li>
</ul>
<div class="meta">
Posted in <a href="http://www.electric-cloud.com/blog/category/software-development/" title="View all posts in Software Development" rel="category tag">Software Development</a>. Tags:<span class="tags"> <a href="http://www.electric-cloud.com/blog/tag/electric-cloud-solutions/" rel="tag">Electric Cloud Solutions</a>, <a href="http://www.electric-cloud.com/blog/tag/gmake/" rel="tag">gmake</a>, <a href="http://www.electric-cloud.com/blog/tag/gnu-make/" rel="tag">gnu make</a>, <a href="http://www.electric-cloud.com/blog/tag/testing/" rel="tag">testing</a></span>. <a href='http://www.electric-cloud.com/blog/2009/09/15/using-markov-chains-to-generate-test-input/feed/'><abbr title="Really Simple Syndication">RSS</abbr> feed for comments on this post.</a>. <a href="http://www.electric-cloud.com/blog/2009/09/15/using-markov-chains-to-generate-test-input/trackback/" rel="trackback">TrackBack <abbr title="Universal Resource Locator">URL</abbr></a>.
</div>
</div>
<h3 id="comments">8 Comments</h3>
<ol class="commentlist">
		<li class="comment even thread-even depth-1" id="comment-78">
				<div id="div-comment-78" class="comment-body">
				<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/d0bf2949f402e63317f68b1204da0137?s=32&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D32&amp;r=G' class='avatar avatar-32 photo' height='32' width='32' />		<cite class="fn">Spotpuff</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.electric-cloud.com/blog/2009/09/15/using-markov-chains-to-generate-test-input/#comment-78">
			September 15, 2009 at 6:30 am</a>		</div>

		<p>After learning more about stochastic modeling and trying my hand at it, this was one of the areas I read up on and this is a good demonstration of why Markov chains help so much. Good job!</p>

		<div class="reply">
		<a rel='nofollow' class='comment-reply-link' href='/blog/2009/09/15/using-markov-chains-to-generate-test-input/?replytocom=78#respond' onclick='return addComment.moveForm("div-comment-78", "78", "respond", "542")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-81">
				<div id="div-comment-81" class="comment-body">
				<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/5f0d746a46794546163b4d205158ca2d?s=32&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D32&amp;r=G' class='avatar avatar-32 photo' height='32' width='32' />		<cite class="fn">D Johnson</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.electric-cloud.com/blog/2009/09/15/using-markov-chains-to-generate-test-input/#comment-81">
			September 15, 2009 at 8:16 am</a>		</div>

		<p>Very clear and concise overview of a topic that is usually obfuscated by mathematical notation.  Great job.</p>

		<div class="reply">
		<a rel='nofollow' class='comment-reply-link' href='/blog/2009/09/15/using-markov-chains-to-generate-test-input/?replytocom=81#respond' onclick='return addComment.moveForm("div-comment-81", "81", "respond", "542")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-even depth-1" id="comment-82">
				<div id="div-comment-82" class="comment-body">
				<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/495eec05e80cf799f64b46a415acce03?s=32&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D32&amp;r=G' class='avatar avatar-32 photo' height='32' width='32' />		<cite class="fn"><a href='http://9fans.net/' rel='external nofollow' class='url'>maht</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.electric-cloud.com/blog/2009/09/15/using-markov-chains-to-generate-test-input/#comment-82">
			September 15, 2009 at 9:24 am</a>		</div>

		<p>Bentley built his Markov chain using his Bell labs colleagues Pike &amp;  Kernighan&#8217;s Markov algorithm from The Practice of Programming</p>
<p><a href="http://books.google.co.uk/books?id=to6M9_dbjosC&amp;pg=PA62&amp;lpg=PA62&amp;ots=3YL0Fgy14b&amp;dq=markov+practice+of+programming" rel="nofollow">http://books.google.co.uk/books?id=to6M9_dbjosC&amp;pg=PA62&amp;lpg=PA62&amp;ots=3YL0Fgy14b&amp;dq=markov+practice+of+programming</a></p>
<p>Pike had used this technique earlier when coding up <a href="http://en.wikipedia.org/wiki/Mark_V_Shaney" rel="nofollow">http://en.wikipedia.org/wiki/Mark_V_Shaney</a> with Bruce Ellis</p>
<p>I&#8217;m sure they were not the first</p>

		<div class="reply">
		<a rel='nofollow' class='comment-reply-link' href='/blog/2009/09/15/using-markov-chains-to-generate-test-input/?replytocom=82#respond' onclick='return addComment.moveForm("div-comment-82", "82", "respond", "542")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-83">
				<div id="div-comment-83" class="comment-body">
				<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/5218eb7dc183afb15fd171e5ec332657?s=32&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D32&amp;r=G' class='avatar avatar-32 photo' height='32' width='32' />		<cite class="fn"><a href='http://bulkan-evcimen.com' rel='external nofollow' class='url'>Bulkan Evcimen</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.electric-cloud.com/blog/2009/09/15/using-markov-chains-to-generate-test-input/#comment-83">
			September 15, 2009 at 2:19 pm</a>		</div>

		<p>Your explanation of Markov chain&#8217;s is crystal clear. Thanks. Im curious to know how you built the probability tables using makefiles as input. How did you tokenize the makefile ? Did you use the same parser in make ?</p>

		<div class="reply">
		<a rel='nofollow' class='comment-reply-link' href='/blog/2009/09/15/using-markov-chains-to-generate-test-input/?replytocom=83#respond' onclick='return addComment.moveForm("div-comment-83", "83", "respond", "542")'>Reply</a>		</div>
				</div>
		<ul class='children'>
		<li class="comment even depth-2" id="comment-84">
				<div id="div-comment-84" class="comment-body">
				<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/6344c5478a4b5f0e8c546c736b2a7e0d?s=32&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D32&amp;r=G' class='avatar avatar-32 photo' height='32' width='32' />		<cite class="fn">Eric Melski</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.electric-cloud.com/blog/2009/09/15/using-markov-chains-to-generate-test-input/#comment-84">
			September 15, 2009 at 2:28 pm</a>		</div>

		<p>That&#8217;s a great question.  For this implementation, I did not bother trying to tokenize the makefile, but rather built the probability tables based on the character-by-character analysis of the makefiles.  This is sometimes called &#8220;letter-level&#8221; Markov chains, as opposed to &#8220;word-level&#8221;.  It has the advantage of being very simple to implement, and the disadvantage of producing somewhat less makefile-like output.  In theory, word-level chains would give me random makefiles that were even more like real makefiles.  I explored changing the generator to do word-level chains, but that proved to be more work than I could reasonably justify investing in this side project.</p>

		<div class="reply">
		<a rel='nofollow' class='comment-reply-link' href='/blog/2009/09/15/using-markov-chains-to-generate-test-input/?replytocom=84#respond' onclick='return addComment.moveForm("div-comment-84", "84", "respond", "542")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1" id="comment-85">
				<div id="div-comment-85" class="comment-body">
				<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/5218eb7dc183afb15fd171e5ec332657?s=32&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D32&amp;r=G' class='avatar avatar-32 photo' height='32' width='32' />		<cite class="fn"><a href='http://bulkan-evcimen.com' rel='external nofollow' class='url'>Bulkan Evcimen</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.electric-cloud.com/blog/2009/09/15/using-markov-chains-to-generate-test-input/#comment-85">
			September 15, 2009 at 2:48 pm</a>		</div>

		<p>Thanks for the reply Eric.</p>

		<div class="reply">
		<a rel='nofollow' class='comment-reply-link' href='/blog/2009/09/15/using-markov-chains-to-generate-test-input/?replytocom=85#respond' onclick='return addComment.moveForm("div-comment-85", "85", "respond", "542")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-89">
				<div id="div-comment-89" class="comment-body">
				<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/cbc9a200333b9de825afbfd733b0d933?s=32&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D32&amp;r=G' class='avatar avatar-32 photo' height='32' width='32' />		<cite class="fn">Arun</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.electric-cloud.com/blog/2009/09/15/using-markov-chains-to-generate-test-input/#comment-89">
			October 23, 2009 at 4:14 am</a>		</div>

		<p>Probably the best explanation of Markov Chains on the web. consider updating Wikipedia with this information. thanks!</p>

		<div class="reply">
		<a rel='nofollow' class='comment-reply-link' href='/blog/2009/09/15/using-markov-chains-to-generate-test-input/?replytocom=89#respond' onclick='return addComment.moveForm("div-comment-89", "89", "respond", "542")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-219">
				<div id="div-comment-219" class="comment-body">
				<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/b2205964d196cdba00c7bdbddb7f2f8e?s=32&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D32&amp;r=G' class='avatar avatar-32 photo' height='32' width='32' />		<cite class="fn">Andrew Moffat</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.electric-cloud.com/blog/2009/09/15/using-markov-chains-to-generate-test-input/#comment-219">
			December 5, 2010 at 12:52 am</a>		</div>

		<p>Like everyone else has said, excellent explanation of Markov chains.  I&#8217;ve had a somewhat passing interest in learning them, but each time didn&#8217;t grasp them right away.  This was crystal clear.  Thanks!</p>

		<div class="reply">
		<a rel='nofollow' class='comment-reply-link' href='/blog/2009/09/15/using-markov-chains-to-generate-test-input/?replytocom=219#respond' onclick='return addComment.moveForm("div-comment-219", "219", "respond", "542")'>Reply</a>		</div>
				</div>
		</li>
</ol>
<h3> 6 Trackbacks</h3><div class="pinglist">        <div id="comment-79"><a href='http://mathworld.us/index.php/probability-and-statistics/probability/using-markov-chains-to-generate-test-input-%c2%ab-the-electric-cloud-blog/' rel='external nofollow' class='url'>Math World | Using Markov Chains to Generate Test Input « The Electric Cloud Blog</a></div>
        <div id="comment-80"><a href='http://topsy.com/tb/url4.eu/RStY' rel='external nofollow' class='url'>Twitter Trackbacks for Using Markov Chains to Generate Test Input « The Electric Cloud Blog [electric-cloud.com] on Topsy.com</a></div>
        <div id="comment-86"><a href='http://www.netcrema.com/?p=13776' rel='external nofollow' class='url'>Using Markov Chains to Generate Test Input « The Electric Cloud Blog &laquo; Netcrema &#8211; creme de la social news via digg + delicious + stumpleupon + reddit</a></div>
        <div id="comment-87"><a href='http://www.joselise.com/wp/2009/09/16/links-for-2009-09-15/' rel='external nofollow' class='url'>links for 2009-09-15 at DeStructUred Blog</a></div>
        <div id="comment-88"><a href='http://botd.wordpress.com/2009/09/17/top-posts-1238/' rel='external nofollow' class='url'>Top Posts &laquo; WordPress.com</a></div>
        <div id="comment-217"><a href='http://topsy.com/www.electric-cloud.com/blog/2009/09/15/using-markov-chains-to-generate-test-input/?utm_source=pingback&amp;utm_campaign=L2' rel='external nofollow' class='url'>Tweets that mention Software Build Solutions | Electric Cloud -- Topsy.com</a></div>
</div>
                        <!-- If comments are open, but there are no comments. -->
         
<div id="respond">
<h3>Leave a comment</h3>
<div id="cancel-comment-reply"><small><a rel="nofollow" id="cancel-comment-reply-link" href="/blog/2009/09/15/using-markov-chains-to-generate-test-input/#respond" style="display:none;">Click here to cancel reply.</a></small></div>
<form action="http://www.electric-cloud.com/blog/wp-comments-post.php" method="post" id="commentform">
<p><input type="text" name="author" id="author" value="" size="22" tabindex="1" />
<label for="author"><small>Name (required)</small></label></p>
<p><input type="text" name="email" id="email" value="" size="22" tabindex="2" />
<label for="email"><small>Mail (will not be published) (required)</small></label></p>
<p><input type="text" name="url" id="url" value="" size="22" tabindex="3" />
<label for="url"><small>Website</small></label></p>
<p><textarea name="comment" id="comment" cols="100%" rows="10" tabindex="4"></textarea></p> 
<!-- <p><small><strong>XHTML:</strong> You can use these tags: &lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </small></p> -->
<p><input name="submit" type="submit" id="submit" tabindex="5" value="Submit Comment" />
<input type='hidden' name='comment_post_ID' value='542' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p>
</form>
 
</div>
<div class="nextprev">
<div class="alignleft"> &laquo; <a href="http://www.electric-cloud.com/blog/2009/09/14/getting-data-to-the-cloud/" rel="prev">Getting data to the cloud</a></div>
<div class="alignright"> <a href="http://www.electric-cloud.com/blog/2009/10/05/private-clouds-more-than-just-buzzword-bingo/" rel="next">Private clouds: more than just buzzword bingo</a> &raquo;</div>
</div>
</div>
<div class="right">
<div id="sidebar-right" class="sidebar">
<div><a href="/blog/?feed=rss"><img src="/blog/wp-content/themes/ec-theme/images/right_rss.jpg" alt="" width="219" height="113" border="0" /></a></div>
<div><a href="http://www.twitter.com/ElectricCloud" target="_blank"><img src="/blog/wp-content/themes/ec-theme/images/right_twitter.jpg" alt="" width="219" height="113" border="0" /></a></div>
<div>Tags</div>
<a href="http://www.electric-cloud.com/blog/tag/electric-cloud-solutions/" rel="tag">Electric Cloud Solutions</a> &bull; <a href="http://www.electric-cloud.com/blog/tag/gmake/" rel="tag">gmake</a> &bull; <a href="http://www.electric-cloud.com/blog/tag/gnu-make/" rel="tag">gnu make</a> &bull; <a href="http://www.electric-cloud.com/blog/tag/testing/" rel="tag">testing</a></div></div> <!-- close right -->

<div style="height: 50px; clear: both;">&nbsp;</div>
</div> <!-- close middle -->

<div class="footer"><span class="footeritem">&copy; 2003 - 2010 Electric Cloud. All rights reserved.  <a href="/site/map.php" class="footeritem">Site Map</a> | <a href="/site/privacy.php" class="footeritem">Privacy</a> | <a href="/site/terms-of-use.php" class="footeritem">Terms of Use</a></span></div>

</div> <!-- close container -->

</body>
</html>